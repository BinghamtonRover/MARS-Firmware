/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_MARS_PB_H_INCLUDED
#define PB_MARS_PB_H_INCLUDED
#include "utils/pb.h"
#include "gps.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _MarsCommand {
    /* Manual control */
    float swivel;
    float tilt;
    /* Automatic control */
    bool has_position;
    RoverPosition position;
} MarsCommand;

typedef struct _MarsData {
    float swivel;
    float tilt;
} MarsData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define MarsCommand_init_default                 {0, 0, false, RoverPosition_init_default}
#define MarsData_init_default                    {0, 0}
#define MarsCommand_init_zero                    {0, 0, false, RoverPosition_init_zero}
#define MarsData_init_zero                       {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define MarsCommand_swivel_tag                   1
#define MarsCommand_tilt_tag                     2
#define MarsCommand_position_tag                 3
#define MarsData_swivel_tag                      1
#define MarsData_tilt_tag                        2

/* Struct field encoding specification for nanopb */
#define MarsCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    swivel,            1) \
X(a, STATIC,   SINGULAR, FLOAT,    tilt,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  position,          3)
#define MarsCommand_CALLBACK NULL
#define MarsCommand_DEFAULT NULL
#define MarsCommand_position_MSGTYPE RoverPosition

#define MarsData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    swivel,            1) \
X(a, STATIC,   SINGULAR, FLOAT,    tilt,              2)
#define MarsData_CALLBACK NULL
#define MarsData_DEFAULT NULL

extern const pb_msgdesc_t MarsCommand_msg;
extern const pb_msgdesc_t MarsData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define MarsCommand_fields &MarsCommand_msg
#define MarsData_fields &MarsData_msg

/* Maximum encoded size of messages (where known) */
#define MarsCommand_size                         63
#define MarsData_size                            10

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
